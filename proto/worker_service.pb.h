// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: worker_service.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_worker_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_worker_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_worker_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_worker_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_worker_5fservice_2eproto;
namespace workerservice {
class Event;
struct EventDefaultTypeInternal;
extern EventDefaultTypeInternal _Event_default_instance_;
class WorkerQueryRequest;
struct WorkerQueryRequestDefaultTypeInternal;
extern WorkerQueryRequestDefaultTypeInternal _WorkerQueryRequest_default_instance_;
class WorkerQueryResponse;
struct WorkerQueryResponseDefaultTypeInternal;
extern WorkerQueryResponseDefaultTypeInternal _WorkerQueryResponse_default_instance_;
}  // namespace workerservice
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace workerservice {

// ===================================================================


// -------------------------------------------------------------------

class WorkerQueryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:workerservice.WorkerQueryRequest) */ {
 public:
  inline WorkerQueryRequest() : WorkerQueryRequest(nullptr) {}
  ~WorkerQueryRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WorkerQueryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline WorkerQueryRequest(const WorkerQueryRequest& from) : WorkerQueryRequest(nullptr, from) {}
  inline WorkerQueryRequest(WorkerQueryRequest&& from) noexcept
      : WorkerQueryRequest(nullptr, std::move(from)) {}
  inline WorkerQueryRequest& operator=(const WorkerQueryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WorkerQueryRequest& operator=(WorkerQueryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WorkerQueryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WorkerQueryRequest* internal_default_instance() {
    return reinterpret_cast<const WorkerQueryRequest*>(
        &_WorkerQueryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(WorkerQueryRequest& a, WorkerQueryRequest& b) { a.Swap(&b); }
  inline void Swap(WorkerQueryRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WorkerQueryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WorkerQueryRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<WorkerQueryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WorkerQueryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WorkerQueryRequest& from) { WorkerQueryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WorkerQueryRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "workerservice.WorkerQueryRequest"; }

 protected:
  explicit WorkerQueryRequest(::google::protobuf::Arena* arena);
  WorkerQueryRequest(::google::protobuf::Arena* arena, const WorkerQueryRequest& from);
  WorkerQueryRequest(::google::protobuf::Arena* arena, WorkerQueryRequest&& from) noexcept
      : WorkerQueryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCidFieldNumber = 1,
    kStartEidFieldNumber = 2,
    kEndEidFieldNumber = 3,
  };
  // string cid = 1;
  void clear_cid() ;
  const std::string& cid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cid(Arg_&& arg, Args_... args);
  std::string* mutable_cid();
  PROTOBUF_NODISCARD std::string* release_cid();
  void set_allocated_cid(std::string* value);

  private:
  const std::string& _internal_cid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cid(
      const std::string& value);
  std::string* _internal_mutable_cid();

  public:
  // int64 start_eid = 2;
  void clear_start_eid() ;
  ::int64_t start_eid() const;
  void set_start_eid(::int64_t value);

  private:
  ::int64_t _internal_start_eid() const;
  void _internal_set_start_eid(::int64_t value);

  public:
  // int64 end_eid = 3;
  void clear_end_eid() ;
  ::int64_t end_eid() const;
  void set_end_eid(::int64_t value);

  private:
  ::int64_t _internal_end_eid() const;
  void _internal_set_end_eid(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:workerservice.WorkerQueryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_WorkerQueryRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WorkerQueryRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr cid_;
    ::int64_t start_eid_;
    ::int64_t end_eid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_worker_5fservice_2eproto;
};
// -------------------------------------------------------------------

class Event final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:workerservice.Event) */ {
 public:
  inline Event() : Event(nullptr) {}
  ~Event() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Event(
      ::google::protobuf::internal::ConstantInitialized);

  inline Event(const Event& from) : Event(nullptr, from) {}
  inline Event(Event&& from) noexcept
      : Event(nullptr, std::move(from)) {}
  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }
  inline Event& operator=(Event&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Event& default_instance() {
    return *internal_default_instance();
  }
  static inline const Event* internal_default_instance() {
    return reinterpret_cast<const Event*>(
        &_Event_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Event& a, Event& b) { a.Swap(&b); }
  inline void Swap(Event* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Event* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Event* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Event>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Event& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Event& from) { Event::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Event* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "workerservice.Event"; }

 protected:
  explicit Event(::google::protobuf::Arena* arena);
  Event(::google::protobuf::Arena* arena, const Event& from);
  Event(::google::protobuf::Arena* arena, Event&& from) noexcept
      : Event(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 2,
    kEidFieldNumber = 1,
  };
  // string data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // int64 eid = 1;
  void clear_eid() ;
  ::int64_t eid() const;
  void set_eid(::int64_t value);

  private:
  ::int64_t _internal_eid() const;
  void _internal_set_eid(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:workerservice.Event)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      32, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Event_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Event& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::int64_t eid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_worker_5fservice_2eproto;
};
// -------------------------------------------------------------------

class WorkerQueryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:workerservice.WorkerQueryResponse) */ {
 public:
  inline WorkerQueryResponse() : WorkerQueryResponse(nullptr) {}
  ~WorkerQueryResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WorkerQueryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline WorkerQueryResponse(const WorkerQueryResponse& from) : WorkerQueryResponse(nullptr, from) {}
  inline WorkerQueryResponse(WorkerQueryResponse&& from) noexcept
      : WorkerQueryResponse(nullptr, std::move(from)) {}
  inline WorkerQueryResponse& operator=(const WorkerQueryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WorkerQueryResponse& operator=(WorkerQueryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WorkerQueryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WorkerQueryResponse* internal_default_instance() {
    return reinterpret_cast<const WorkerQueryResponse*>(
        &_WorkerQueryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(WorkerQueryResponse& a, WorkerQueryResponse& b) { a.Swap(&b); }
  inline void Swap(WorkerQueryResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WorkerQueryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WorkerQueryResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<WorkerQueryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WorkerQueryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WorkerQueryResponse& from) { WorkerQueryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WorkerQueryResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "workerservice.WorkerQueryResponse"; }

 protected:
  explicit WorkerQueryResponse(::google::protobuf::Arena* arena);
  WorkerQueryResponse(::google::protobuf::Arena* arena, const WorkerQueryResponse& from);
  WorkerQueryResponse(::google::protobuf::Arena* arena, WorkerQueryResponse&& from) noexcept
      : WorkerQueryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventsFieldNumber = 1,
  };
  // repeated .workerservice.Event events = 1;
  int events_size() const;
  private:
  int _internal_events_size() const;

  public:
  void clear_events() ;
  ::workerservice::Event* mutable_events(int index);
  ::google::protobuf::RepeatedPtrField<::workerservice::Event>* mutable_events();

  private:
  const ::google::protobuf::RepeatedPtrField<::workerservice::Event>& _internal_events() const;
  ::google::protobuf::RepeatedPtrField<::workerservice::Event>* _internal_mutable_events();
  public:
  const ::workerservice::Event& events(int index) const;
  ::workerservice::Event* add_events();
  const ::google::protobuf::RepeatedPtrField<::workerservice::Event>& events() const;
  // @@protoc_insertion_point(class_scope:workerservice.WorkerQueryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_WorkerQueryResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WorkerQueryResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::workerservice::Event > events_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_worker_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// WorkerQueryRequest

// string cid = 1;
inline void WorkerQueryRequest::clear_cid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cid_.ClearToEmpty();
}
inline const std::string& WorkerQueryRequest::cid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:workerservice.WorkerQueryRequest.cid)
  return _internal_cid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WorkerQueryRequest::set_cid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:workerservice.WorkerQueryRequest.cid)
}
inline std::string* WorkerQueryRequest::mutable_cid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cid();
  // @@protoc_insertion_point(field_mutable:workerservice.WorkerQueryRequest.cid)
  return _s;
}
inline const std::string& WorkerQueryRequest::_internal_cid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cid_.Get();
}
inline void WorkerQueryRequest::_internal_set_cid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cid_.Set(value, GetArena());
}
inline std::string* WorkerQueryRequest::_internal_mutable_cid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cid_.Mutable( GetArena());
}
inline std::string* WorkerQueryRequest::release_cid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:workerservice.WorkerQueryRequest.cid)
  return _impl_.cid_.Release();
}
inline void WorkerQueryRequest::set_allocated_cid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cid_.IsDefault()) {
          _impl_.cid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:workerservice.WorkerQueryRequest.cid)
}

// int64 start_eid = 2;
inline void WorkerQueryRequest::clear_start_eid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_eid_ = ::int64_t{0};
}
inline ::int64_t WorkerQueryRequest::start_eid() const {
  // @@protoc_insertion_point(field_get:workerservice.WorkerQueryRequest.start_eid)
  return _internal_start_eid();
}
inline void WorkerQueryRequest::set_start_eid(::int64_t value) {
  _internal_set_start_eid(value);
  // @@protoc_insertion_point(field_set:workerservice.WorkerQueryRequest.start_eid)
}
inline ::int64_t WorkerQueryRequest::_internal_start_eid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_eid_;
}
inline void WorkerQueryRequest::_internal_set_start_eid(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_eid_ = value;
}

// int64 end_eid = 3;
inline void WorkerQueryRequest::clear_end_eid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_eid_ = ::int64_t{0};
}
inline ::int64_t WorkerQueryRequest::end_eid() const {
  // @@protoc_insertion_point(field_get:workerservice.WorkerQueryRequest.end_eid)
  return _internal_end_eid();
}
inline void WorkerQueryRequest::set_end_eid(::int64_t value) {
  _internal_set_end_eid(value);
  // @@protoc_insertion_point(field_set:workerservice.WorkerQueryRequest.end_eid)
}
inline ::int64_t WorkerQueryRequest::_internal_end_eid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.end_eid_;
}
inline void WorkerQueryRequest::_internal_set_end_eid(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_eid_ = value;
}

// -------------------------------------------------------------------

// WorkerQueryResponse

// repeated .workerservice.Event events = 1;
inline int WorkerQueryResponse::_internal_events_size() const {
  return _internal_events().size();
}
inline int WorkerQueryResponse::events_size() const {
  return _internal_events_size();
}
inline void WorkerQueryResponse::clear_events() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.events_.Clear();
}
inline ::workerservice::Event* WorkerQueryResponse::mutable_events(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:workerservice.WorkerQueryResponse.events)
  return _internal_mutable_events()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::workerservice::Event>* WorkerQueryResponse::mutable_events()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:workerservice.WorkerQueryResponse.events)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_events();
}
inline const ::workerservice::Event& WorkerQueryResponse::events(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:workerservice.WorkerQueryResponse.events)
  return _internal_events().Get(index);
}
inline ::workerservice::Event* WorkerQueryResponse::add_events() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::workerservice::Event* _add = _internal_mutable_events()->Add();
  // @@protoc_insertion_point(field_add:workerservice.WorkerQueryResponse.events)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::workerservice::Event>& WorkerQueryResponse::events() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:workerservice.WorkerQueryResponse.events)
  return _internal_events();
}
inline const ::google::protobuf::RepeatedPtrField<::workerservice::Event>&
WorkerQueryResponse::_internal_events() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.events_;
}
inline ::google::protobuf::RepeatedPtrField<::workerservice::Event>*
WorkerQueryResponse::_internal_mutable_events() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.events_;
}

// -------------------------------------------------------------------

// Event

// int64 eid = 1;
inline void Event::clear_eid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eid_ = ::int64_t{0};
}
inline ::int64_t Event::eid() const {
  // @@protoc_insertion_point(field_get:workerservice.Event.eid)
  return _internal_eid();
}
inline void Event::set_eid(::int64_t value) {
  _internal_set_eid(value);
  // @@protoc_insertion_point(field_set:workerservice.Event.eid)
}
inline ::int64_t Event::_internal_eid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.eid_;
}
inline void Event::_internal_set_eid(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eid_ = value;
}

// string data = 2;
inline void Event::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& Event::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:workerservice.Event.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Event::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:workerservice.Event.data)
}
inline std::string* Event::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:workerservice.Event.data)
  return _s;
}
inline const std::string& Event::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void Event::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* Event::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* Event::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:workerservice.Event.data)
  return _impl_.data_.Release();
}
inline void Event::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:workerservice.Event.data)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace workerservice


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_worker_5fservice_2eproto_2epb_2eh
